# schema/types/op_environment.graphql
# OP-Umwelt-Schicht


type EntryExitEvent {
    op_room: String
    time: String
    event: String
    person: String
}



type IndoorEnvironment {
    temperature: Float
    humidity: Float
    co2: Float
    uv: Float
    pressure: Float
    illuminance: Float
    noise: Float
    timestamp: String
    door_status: String
    op_room: String
}

type StaffCommunication {
    op_room: String
    time: String!
    message: String!
    sender: String!
}



type OpEnvironment{
    entryExitEvents: EntryExitEvent
    indoorEnvironment: IndoorEnvironment
    staffCommunication: StaffCommunication
}


type OpEnvironmentByTimestampAndPID{
    getOpEnvironmentByTimestampAndPID(patientId: ID!, timestamp: String!, secondsRange: Int): OpEnvironment
}


# type OpEnvironmentSubscription{
#     # entryExitEventUpdated: EntryExitEvent
#     indoorEnvironmentDataUpdated(patientId: ID!): IndoorEnvironment
#     # staffCommunicationUpdated: StaffCommunication
# }






extend type Subscription {
    indoorEnvironmentByPid(patientId: ID!): IndoorEnvironment
    staffCommunicationByPid(patientId: ID!): StaffCommunication
    entryExitEventByPid(patientId: ID!): EntryExitEvent
}





# # old schema

# type EnvironmentDataQuery {
#     getIndoorEnvironmentData: [IndoorEnvironment]
# }





# extend type Query {
#     environmentData: EnvironmentDataQuery
#     # opEnvironmentQuery: 
# }


